#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void generateKeyMatrix(char key[], char keyMatrix[SIZE][SIZE]) {
    int alpha[26] = {0};
    int i, j, k;
    int len = strlen(key);
    
    k = 0;
    for (i = 0; i < len; i++) {
        if (key[i] == 'J') key[i] = 'I';
        if (alpha[key[i] - 'A'] == 0) {
            keyMatrix[k / SIZE][k % SIZE] = key[i];
            alpha[key[i] - 'A'] = 1;
            k++;
        }
    }

    for (i = 0; i < 26; i++) {
        if (i + 'A' == 'J') continue;
        if (alpha[i] == 0) {
            keyMatrix[k / SIZE][k % SIZE] = i + 'A';
            k++;
        }
    }
}

void search(char keyMatrix[SIZE][SIZE], char a, char b, int pos[]) {
    int i, j;

    if (a == 'J') a = 'I';
    if (b == 'J') b = 'I';

    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (keyMatrix[i][j] == a) {
                pos[0] = i;
                pos[1] = j;
            }
            if (keyMatrix[i][j] == b) {
                pos[2] = i;
                pos[3] = j;
            }
        }
    }
}

void decrypt(char str[], char keyMatrix[SIZE][SIZE], char decrypted[]) {
    int i, a, b, c, d;
    int pos[4];

    for (i = 0; i < strlen(str); i += 2) {
        search(keyMatrix, str[i], str[i + 1], pos);
        a = pos[0];
        b = pos[1];
        c = pos[2];
        d = pos[3];

        if (a == c) {
            decrypted[i] = keyMatrix[a][(b - 1 + SIZE) % SIZE];
            decrypted[i + 1] = keyMatrix[c][(d - 1 + SIZE) % SIZE];
        } else if (b == d) {
            decrypted[i] = keyMatrix[(a - 1 + SIZE) % SIZE][b];
            decrypted[i + 1] = keyMatrix[(c - 1 + SIZE) % SIZE][d];
        } else {
            decrypted[i] = keyMatrix[a][d];
            decrypted[i + 1] = keyMatrix[c][b];
        }
    }
    decrypted[strlen(str)] = '\0';
}

int main() {
    char key[] = "MONARCHY";
    char keyMatrix[SIZE][SIZE];
    char str[] = "KXJEYUREBEZWEHEWRYTUHEYFSKREHEGOYFIWTTTUOLKSYCAJPOBOTEIZONTXBYBNTGONEYCUZWRGDSONSXBOUYWRHEBAAHYUSEDQ";
    char decrypted[sizeof(str)];

    generateKeyMatrix(key, keyMatrix);

    decrypt(str, keyMatrix, decrypted);

    printf("Decrypted Text: %s\n", decrypted);

    return 0;
}
